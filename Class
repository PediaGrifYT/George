Todo Task

package com.example.todo

import android.annotation.SuppressLint
import android.os.Bundle
import androidx.activity.ComponentActivity
import androidx.activity.compose.setContent
import androidx.activity.enableEdgeToEdge
import androidx.compose.foundation.layout.Column
import androidx.compose.foundation.layout.Row
import androidx.compose.foundation.layout.Spacer
import androidx.compose.foundation.layout.fillMaxSize
import androidx.compose.foundation.layout.height
import androidx.compose.foundation.layout.padding
import androidx.compose.foundation.lazy.LazyColumn
import androidx.compose.foundation.lazy.items
import androidx.compose.material3.Button
import androidx.compose.material3.OutlinedTextField
import androidx.compose.material3.Scaffold
import androidx.compose.material3.Text
import androidx.compose.runtime.Composable
import androidx.compose.runtime.getValue
import androidx.compose.runtime.mutableStateListOf
import androidx.compose.runtime.mutableStateOf
import androidx.compose.runtime.remember
import androidx.compose.runtime.setValue
import androidx.compose.ui.Modifier
import androidx.compose.ui.tooling.preview.Preview
import androidx.compose.ui.unit.dp
import com.example.todo.ui.theme.ToDoTheme
import kotlin.jvm.internal.MutablePropertyReference2

class MainActivity : ComponentActivity() {
    override fun onCreate(savedInstanceState: Bundle?) {
        super.onCreate(savedInstanceState)
        enableEdgeToEdge()
        setContent {
            ToDoTheme {
                Scaffold(modifier = Modifier.fillMaxSize()) { innerPadding ->
                    Greeting(
                        name = "Android",
                        modifier = Modifier.padding(innerPadding)
                    )
                }
            }
        }
    }
}
@SuppressLint("UnrememberedMutableState")
@Composable
fun Greeting(name: String, modifier: Modifier = Modifier) {
   var name by remember { mutableStateOf("") }
    var tasks = remember {
        mutableStateListOf<String>()
    }
    Column {

        Text(
            text = "Task App",
            modifier = modifier
        )

        Spacer(modifier = Modifier.height(20.dp))
        Row {
            OutlinedTextField(
                value = name, onValueChange = { name=it},
                label = { Text(text = "Enter a tasks") },
                singleLine = true,
            )
            
            Button(onClick = { tasks.add(name) },) {
                Text(text = "Add")
            }
            Spacer(modifier=Modifier.height(20.dp))
        }
        Spacer(modifier = Modifier.height(20.dp))
        Text(
            text = "Task List",
            modifier = modifier
        )
        Spacer(modifier = (Modifier.height(20.dp)))
        LazyColumn {
            items(tasks){
                item->
                Text(text = item)
            }
//            item {
//                Text(text = "")
//                Text(text = "First Item")
//                Text(text = "Second Item")
//                Text(text = "Third Item")
//                Text(text = "Fourth Item")
//            }
        }
    }
}
@Preview(showBackground = true)
@Composable
fun GreetingPreview() {
    ToDoTheme {
        Greeting("")
    }
}



----------------------

Calculator sample

package com.example.calculator

import android.annotation.SuppressLint
import android.os.Bundle
import androidx.activity.ComponentActivity
import androidx.activity.R
import androidx.activity.compose.setContent
import androidx.activity.enableEdgeToEdge
import androidx.compose.foundation.layout.Column
import androidx.compose.foundation.layout.Row
import androidx.compose.foundation.layout.Spacer
import androidx.compose.foundation.layout.fillMaxSize
import androidx.compose.foundation.layout.height
import androidx.compose.foundation.layout.heightIn
import androidx.compose.foundation.layout.padding
import androidx.compose.foundation.layout.width
import androidx.compose.foundation.layout.widthIn
import androidx.compose.foundation.lazy.LazyColumn
import androidx.compose.foundation.lazy.items
import androidx.compose.material3.Button
import androidx.compose.material3.OutlinedTextField
import androidx.compose.material3.Scaffold
import androidx.compose.material3.Text
import androidx.compose.runtime.Composable
import androidx.compose.runtime.getValue
import androidx.compose.runtime.mutableStateListOf
import androidx.compose.runtime.mutableStateOf
import androidx.compose.runtime.remember
import androidx.compose.runtime.setValue
import androidx.compose.ui.Modifier
import androidx.compose.ui.tooling.preview.Preview
import androidx.compose.ui.unit.dp
import com.example.calculator.ui.theme.CalculatorTheme

class MainActivity : ComponentActivity() {
    override fun onCreate(savedInstanceState: Bundle?) {
        super.onCreate(savedInstanceState)
        enableEdgeToEdge()
        setContent {
            CalculatorTheme {
                Scaffold(modifier = Modifier.fillMaxSize()) { innerPadding ->
                    Greeting(
                        name = "Android",
                        modifier = Modifier.padding(innerPadding)
                    )
                }
            }
        }
    }
}
@SuppressLint("UnrememberedMutableState")
    @Composable
    fun Greeting(name: String, modifier: Modifier = Modifier) {

        var num1 by remember { mutableStateOf("") }
        var num2 by remember { mutableStateOf("") }
        var result by remember { mutableStateOf(0) }
        Column {
            Text(
                text = "Calculator",
                modifier = modifier
            )
            Row {
                OutlinedTextField(
                    value = num1,
                    onValueChange = { num1 = it },
                    Modifier.width(180.dp)
                )
                Spacer(modifier = Modifier.width(20.dp))
                OutlinedTextField(
                    value = num2,
                    onValueChange = { num2 = it },
                    Modifier.width(180.dp)

                )
            }
            Spacer(modifier = Modifier.height(20.dp))
            Row {
                Button(
                    onClick = {
                        result = num1.toInt() + num2.toInt()

                    }

                ) {
                    Text(text = "Add")
                }
                Spacer(modifier = Modifier.width(10.dp))
                Button(
                    onClick = {
                        result = num1.toInt() - num2.toInt()
                    }
                ) {
                    Text(text = "Subtract")

                }
                Spacer(modifier = Modifier.width(10.dp))
                Button(
                    onClick = {
                        result = num1.toInt() * num2.toInt()
                    }
                ) {
                    Text(text = "Multiply")

                }
                Spacer(modifier = Modifier.width(10.dp))
                Button(
                    onClick = {
                        result = num1.toInt() % num2.toInt()
                    }
                ) {
                    Text(text = "Divide")

                }
            }
            Spacer(modifier = Modifier.height(20.dp))
            Text(
                text = "Result:"
            )
            Text(
                text = result.toString()
            )


        }

    }
    @Preview(showBackground = true)
@Composable
fun GreetingPreview() {
    CalculatorTheme {
        Greeting(" ")
    }
}


------------------------


navigation Source

package com.example.placasapp

import android.net.Uri
import android.os.Bundle
import androidx.activity.ComponentActivity
import androidx.activity.compose.setContent
import androidx.activity.enableEdgeToEdge
import androidx.compose.foundation.Image
import androidx.compose.foundation.clickable
import androidx.compose.foundation.layout.Arrangement
import androidx.compose.foundation.layout.Column
import androidx.compose.foundation.layout.Row
import androidx.compose.foundation.layout.Spacer
import androidx.compose.foundation.layout.fillMaxSize
import androidx.compose.foundation.layout.fillMaxWidth
import androidx.compose.foundation.layout.height
import androidx.compose.foundation.layout.padding
import androidx.compose.foundation.layout.width
import androidx.compose.foundation.lazy.LazyColumn
import androidx.compose.foundation.lazy.items
import androidx.compose.material3.Card
import androidx.compose.material3.ExperimentalMaterial3Api
import androidx.compose.material3.Scaffold
import androidx.compose.material3.Text
import androidx.compose.runtime.Composable
import androidx.compose.ui.Alignment
import androidx.compose.ui.Modifier
import androidx.compose.ui.tooling.preview.Preview
import androidx.compose.ui.unit.dp
import androidx.compose.ui.unit.sp
import androidx.navigation.NavHostController
import androidx.navigation.compose.NavHost
import androidx.navigation.compose.composable
import androidx.navigation.compose.rememberNavController
import coil.compose.rememberAsyncImagePainter
import com.example.placasapp.ui.theme.PlacasAppTheme

class MainActivity : ComponentActivity() {
    override fun onCreate(savedInstanceState: Bundle?) {
        super.onCreate(savedInstanceState)
//        enableEdgeToEdge()
        setContent {
            PlacasAppTheme {
                val navController = rememberNavController()
                NavHost(navController, startDestination = "placeList"){
                    composable("placeList"){
                        PlaceListScreen(navController)
                    }
                    composable(
                        "detailsScreen/{name}/{image}/{description}",
                    ) { backStackEntry ->
                        val name = backStackEntry.arguments?.getString("name") ?: ""
                        val image = backStackEntry.arguments?.getString("image") ?: ""
                        val description = backStackEntry.arguments?.getString("description") ?: ""

                        PlaceDetailsScreen(name, image, description)
                    }
                }
            }
        }
    }
}

data class Place(
    val name:String,
    val image:String,
    val description:String
)

val placeList = listOf(
    Place("Turtle Rock","https://assets.zyrosite.com/mePbn8MV6OiXExJr/new-york-city-A0x1aw8O8Bh6JyP8.jpg","Suscipit inceptos est felis purus aenean aliquet adipiscing diam venenatis, " +
            "augue nibh duis neque aliquam tellus condimentum sagittis vivamus, cras ante etiam sit em semper volutpat curae mauris justo nisl luctus, " +
            "non eros primis ultrices nascetur erat varius integer."
    ),
    Place("Turtle Rock","https://assets.zyrosite.com/mePbn8MV6OiXExJr/calm-water-in-european-city-mePbDvrwpKFejODD.jpg","Suscipit inceptos est felis purus aenean aliquet adipiscing diam venenatis, " +
            "augue nibh duis neque aliquam tellus condimentum sagittis vivamus, cras ante etiam sit em semper volutpat curae mauris justo nisl luctus, " +
            "non eros primis ultrices nascetur erat varius integer."
    ),
    Place("Turtle Rock","https://assets.zyrosite.com/mePbn8MV6OiXExJr/beautiful-architecture-building-A0x1aw8G9RIDOoe7.jpg","Suscipit inceptos est felis purus aenean aliquet adipiscing diam venenatis, " +
            "augue nibh duis neque aliquam tellus condimentum sagittis vivamus, cras ante etiam sit em semper volutpat curae mauris justo nisl luctus, " +
            "non eros primis ultrices nascetur erat varius integer."
    ),
    Place("Turtle Rock","https://assets.zyrosite.com/mePbn8MV6OiXExJr/pexels-pixabay-460672-dOq8OyKvrotZNXrO.jpg","Suscipit inceptos est felis purus aenean aliquet adipiscing diam venenatis, " +
            "augue nibh duis neque aliquam tellus condimentum sagittis vivamus, cras ante etiam sit em semper volutpat curae mauris justo nisl luctus, " +
            "non eros primis ultrices nascetur erat varius integer."
    ),
    Place("Turtle Rock","https://assets.zyrosite.com/mePbn8MV6OiXExJr/pexels-peng-liu-45946-169647-YX4aqaODeKF6yzqz.jpg","Suscipit inceptos est felis purus aenean aliquet adipiscing diam venenatis, " +
            "augue nibh duis neque aliquam tellus condimentum sagittis vivamus, cras ante etiam sit em semper volutpat curae mauris justo nisl luctus, " +
            "non eros primis ultrices nascetur erat varius integer."
    )
)

@OptIn(ExperimentalMaterial3Api::class)
@Composable
fun PlaceListScreen(navController: NavHostController) {
    Column(Modifier.padding(16.dp)) {
        Text(text = "Places", fontSize = 24.sp)
        Spacer(Modifier.height(10.dp))
        LazyColumn() {
            items(placeList){item->
                Card(
                    modifier = Modifier
                        .fillMaxWidth()
                        .padding(8.dp)
                        .clickable {
                            val encodedName = Uri.encode(item.name)
                            val encodedImage = Uri.encode(item.image)
                            val encodedDescription = Uri.encode(item.description)

                            navController.navigate("detailsScreen/$encodedName/$encodedImage/$encodedDescription")
                        }
                ) {
                    Row(modifier = Modifier.padding(16.dp),
                        horizontalArrangement = Arrangement.Center,
                        verticalAlignment = Alignment.CenterVertically) {
                        Image(
                            painter = rememberAsyncImagePainter(item.image),
                            contentDescription = "Loaded Image",
                            modifier = Modifier
                                .width(100.dp)
                                .height(100.dp)
                        )
                        Spacer(modifier = Modifier.width(25.dp))
                        Text(text =item.name)

                    }
                }
            }

        }
    }




}

@Composable
fun PlaceDetailsScreen(name: String, image: String, description: String) {
    Column(modifier = Modifier.fillMaxSize().padding(16.dp)) {
        Image(
            painter = rememberAsyncImagePainter(image),
            contentDescription = "Place Image",
            modifier = Modifier
                .fillMaxWidth()
                .height(250.dp)
        )
        Spacer(modifier = Modifier.height(8.dp))
        Text(text = description)
    }
}



@Composable
fun Greeting(name: String, modifier: Modifier = Modifier) {
    Text(
        text = "Hello $name!",
        modifier = modifier
    )
}

@Preview(showBackground = true)
@Composable
fun GreetingPreview() {
    PlacasAppTheme {
        Greeting("Android")
    }
}

--------------------
