Todo Task

package com.example.todo

import android.annotation.SuppressLint
import android.os.Bundle
import androidx.activity.ComponentActivity
import androidx.activity.compose.setContent
import androidx.activity.enableEdgeToEdge
import androidx.compose.foundation.layout.Column
import androidx.compose.foundation.layout.Row
import androidx.compose.foundation.layout.Spacer
import androidx.compose.foundation.layout.fillMaxSize
import androidx.compose.foundation.layout.height
import androidx.compose.foundation.layout.padding
import androidx.compose.foundation.lazy.LazyColumn
import androidx.compose.foundation.lazy.items
import androidx.compose.material3.Button
import androidx.compose.material3.OutlinedTextField
import androidx.compose.material3.Scaffold
import androidx.compose.material3.Text
import androidx.compose.runtime.Composable
import androidx.compose.runtime.getValue
import androidx.compose.runtime.mutableStateListOf
import androidx.compose.runtime.mutableStateOf
import androidx.compose.runtime.remember
import androidx.compose.runtime.setValue
import androidx.compose.ui.Modifier
import androidx.compose.ui.tooling.preview.Preview
import androidx.compose.ui.unit.dp
import com.example.todo.ui.theme.ToDoTheme
import kotlin.jvm.internal.MutablePropertyReference2

class MainActivity : ComponentActivity() {
    override fun onCreate(savedInstanceState: Bundle?) {
        super.onCreate(savedInstanceState)
        enableEdgeToEdge()
        setContent {
            ToDoTheme {
                Scaffold(modifier = Modifier.fillMaxSize()) { innerPadding ->
                    Greeting(
                        name = "Android",
                        modifier = Modifier.padding(innerPadding)
                    )
                }
            }
        }
    }
}
@SuppressLint("UnrememberedMutableState")
@Composable
fun Greeting(name: String, modifier: Modifier = Modifier) {
   var name by remember { mutableStateOf("") }
    var tasks = remember {
        mutableStateListOf<String>()
    }
    Column {

        Text(
            text = "Task App",
            modifier = modifier
        )

        Spacer(modifier = Modifier.height(20.dp))
        Row {
            OutlinedTextField(
                value = name, onValueChange = { name=it},
                label = { Text(text = "Enter a tasks") },
                singleLine = true,
            )
            
            Button(onClick = { tasks.add(name) },) {
                Text(text = "Add")
            }
            Spacer(modifier=Modifier.height(20.dp))
        }
        Spacer(modifier = Modifier.height(20.dp))
        Text(
            text = "Task List",
            modifier = modifier
        )
        Spacer(modifier = (Modifier.height(20.dp)))
        LazyColumn {
            items(tasks){
                item->
                Text(text = item)
            }
//            item {
//                Text(text = "")
//                Text(text = "First Item")
//                Text(text = "Second Item")
//                Text(text = "Third Item")
//                Text(text = "Fourth Item")
//            }
        }
    }
}
@Preview(showBackground = true)
@Composable
fun GreetingPreview() {
    ToDoTheme {
        Greeting("")
    }
}



----------------------


package com.example.calculator

import android.annotation.SuppressLint
import android.os.Bundle
import androidx.activity.ComponentActivity
import androidx.activity.R
import androidx.activity.compose.setContent
import androidx.activity.enableEdgeToEdge
import androidx.compose.foundation.layout.Column
import androidx.compose.foundation.layout.Row
import androidx.compose.foundation.layout.Spacer
import androidx.compose.foundation.layout.fillMaxSize
import androidx.compose.foundation.layout.height
import androidx.compose.foundation.layout.heightIn
import androidx.compose.foundation.layout.padding
import androidx.compose.foundation.layout.width
import androidx.compose.foundation.layout.widthIn
import androidx.compose.foundation.lazy.LazyColumn
import androidx.compose.foundation.lazy.items
import androidx.compose.material3.Button
import androidx.compose.material3.OutlinedTextField
import androidx.compose.material3.Scaffold
import androidx.compose.material3.Text
import androidx.compose.runtime.Composable
import androidx.compose.runtime.getValue
import androidx.compose.runtime.mutableStateListOf
import androidx.compose.runtime.mutableStateOf
import androidx.compose.runtime.remember
import androidx.compose.runtime.setValue
import androidx.compose.ui.Modifier
import androidx.compose.ui.tooling.preview.Preview
import androidx.compose.ui.unit.dp
import com.example.calculator.ui.theme.CalculatorTheme

class MainActivity : ComponentActivity() {
    override fun onCreate(savedInstanceState: Bundle?) {
        super.onCreate(savedInstanceState)
        enableEdgeToEdge()
        setContent {
            CalculatorTheme {
                Scaffold(modifier = Modifier.fillMaxSize()) { innerPadding ->
                    Greeting(
                        name = "Android",
                        modifier = Modifier.padding(innerPadding)
                    )
                }
            }
        }
    }
}
@SuppressLint("UnrememberedMutableState")
    @Composable
    fun Greeting(name: String, modifier: Modifier = Modifier) {

        var num1 by remember { mutableStateOf("") }
        var num2 by remember { mutableStateOf("") }
        var result by remember { mutableStateOf(0) }
        Column {
            Text(
                text = "Calculator",
                modifier = modifier
            )
            Row {
                OutlinedTextField(
                    value = num1,
                    onValueChange = { num1 = it },
                    Modifier.width(180.dp)
                )
                Spacer(modifier = Modifier.width(20.dp))
                OutlinedTextField(
                    value = num2,
                    onValueChange = { num2 = it },
                    Modifier.width(180.dp)

                )
            }
            Spacer(modifier = Modifier.height(20.dp))
            Row {
                Button(
                    onClick = {
                        result = num1.toInt() + num2.toInt()

                    }

                ) {
                    Text(text = "Add")
                }
                Spacer(modifier = Modifier.width(10.dp))
                Button(
                    onClick = {
                        result = num1.toInt() - num2.toInt()
                    }
                ) {
                    Text(text = "Subtract")

                }
                Spacer(modifier = Modifier.width(10.dp))
                Button(
                    onClick = {
                        result = num1.toInt() * num2.toInt()
                    }
                ) {
                    Text(text = "Multiply")

                }
                Spacer(modifier = Modifier.width(10.dp))
                Button(
                    onClick = {
                        result = num1.toInt() / num2.toInt()
                    }
                ) {
                    Text(text = "Divide")

                }
            }
            Spacer(modifier = Modifier.height(20.dp))
            Text(
                text = "Result:"
            )
            Text(
                text = result.toString()
            )


        }

    }
    @Preview(showBackground = true)
@Composable
fun GreetingPreview() {
    CalculatorTheme {
        Greeting(" ")
    }
}
